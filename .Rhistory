library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3->8
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3->8
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = box,
fontname = Helvetica,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3->8
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本表示; one hot; 整数编码; word embedding; word2vec; Glove
# several 'edge' statements
文本表示->one hot 文本表示->整数编码 文本表示->word embedding word embedding->word2vec word embedding->Glove
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本表示; one-hot; 整数编码; word-embedding; word2vec; Glove
# several 'edge' statements
文本表示->one-hot 文本表示->整数编码 文本表示->word-embedding word-embedding->word2vec word-embedding->Glove
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本表示; onehot; 整数编码; wordembedding; word2vec; Glove
# several 'edge' statements
文本表示->onehot 文本表示->整数编码 文本表示->wordembedding wordembedding->word2vec wordembedding->Glove
}
")
library(DiagrammeR)
grViz("
digraph boxes {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本表示; 独热编码; 整数编码; wordembedding; word2vec; Glove
# several 'edge' statements
文本表示->独热编码 文本表示->整数编码 文本表示->wordembedding wordembedding->word2vec wordembedding->Glove
}
")
DiagrammeR("
graph LR
A-->B
A-->C
C-->E
B-->D
C-->D
D-->F
E-->F
")
DiagrammeR("graph LR;A(Rounded)-->B[Squared];B-->C{A Decision};
C-->D[Square One];C-->E[Square Two];
style A fill:#E5E25F;  style B fill:#87AB51; style C fill:#3C8937;
style D fill:#23772C;  style E fill:#B6E6E6;"
)
library(DiagrammeR)
grViz("
digraph boxes {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本表示; 独热编码; 整数编码; wordembedding; word2vec; Glove
# several 'edge' statements
文本表示-->独热编码 文本表示-->整数编码 文本表示-->wordembedding wordembedding-->word2vec wordembedding-->Glove
}
")
library(DiagrammeR)
grViz("
digraph boxes {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本表示; 独热编码; 整数编码; wordembedding; word2vec; Glove
# several 'edge' statements
文本表示->独热编码 文本表示->整数编码 文本表示->wordembedding wordembedding->word2vec wordembedding->Glove
}
")
knitr::include_graphics("./figs/2.jpg")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本表示; 独热编码; 整数编码; wordembedding; word2vec; Glove
# several 'edge' statements
文本表示->独热编码 文本表示->整数编码 文本表示->wordembedding wordembedding->word2vec wordembedding->Glove
}
")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本; embedding; 网络模型(CNN,LSTM,RNN..); 分类器; 分类概率
# several 'edge' statements
文本->embedding embedding->网络模型(CNN,LSTM,RNN..) 网络模型(CNN,LSTM,RNN..)->分类器 分类器->分类概率
}
")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本; embedding; 网络模型CNN,LSTM,RNN等; 分类器; 分类概率
# several 'edge' statements
文本->embedding embedding->网络模型CNN,LSTM,RNN等 网络模型(CNN,LSTM,RNN..)->分类器 分类器->分类概率
}
")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本; embedding; 网络模型CNN,LSTM,RNN等; 分类器; 分类概率
# several 'edge' statements
文本->embedding embedding->网络模型CNN,LSTM,RNN等 网络模型CNN,LSTM,RNN等->分类器 分类器->分类概率
}
")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本; embedding; 网络模型CNN,LSTM,RNN等; 分类器; 分类概率
# several 'edge' statements
文本->embedding embedding->网络模型CNN/LSTM/RNN等 网络模型CNN/LSTM/RNN等->分类器 分类器->分类概率
}
")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本; embedding; 网络模型LSTM等; 分类器; 分类概率
# several 'edge' statements
文本->embedding embedding->网络模型网络模型LSTM等 网络模型网络模型LSTM等->分类器 分类器->分类概率
}
")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本; embedding; 网络模型LSTM等; 分类器; 分类概率
# several 'edge' statements
文本->embedding embedding->网络模型LSTM等 网络模型网络模型LSTM等->分类器 分类器->分类概率
}
")
library(DiagrammeR)
grViz("
digraph{
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
文本; embedding; 网络模型LSTM等; 分类器; 分类概率
# several 'edge' statements
文本->embedding embedding->网络模型LSTM等 网络模型LSTM等->分类器 分类器->分类概率
}
")
knitr::include_graphics("./figs/12.png")
knitr::include_graphics("./figs/13.png")
sigmoid<-function(x){
sigmoid=1/1+exp(-x)
}
x <- seq(-5, 5, 0.01)
plot(x,sigmoid(x),col='red')
sigmoid<-function(x){
sigmoid=1/(1+exp(-x))
}
x <- seq(-5, 5, 0.01)
plot(x,sigmoid(x),col='red')
relu<-function(x){
ifelse(x>0,x,0)
}
x <- seq(0, 10, 0.01)
plot(x,relu(x),col='red')
relu<-function(x){
ifelse(x>0,x,0)
}
x <- seq(-5, 10, 0.01)
plot(x,relu(x),col='red')
relu<-function(x){
ifelse(x>0,x,0)
}
x <- seq(0, 10, 0.01)
plot(x,relu(x),col='red')
relu<-function(x){
ifelse(x>0,x,0)
}
x <- seq(0, 10, 0.001)
plot(x,relu(x),col='red')
knitr::include_graphics("./figs/01.png")
knitr::include_graphics("../figs/5.jpg")
knitr::include_graphics("../figs/8.jpg")
knitr::include_graphics("../figs/8.jpg")
knitr::include_graphics("../figs/9.jpg")
knitr::include_graphics("../figs/10.jpg")
knitr::include_graphics("../figs/5.jpg")
knitr::include_graphics("../figs/13.jpg")
knitr::include_graphics("../figs/13.jpg")
knitr::include_graphics("../figs/7.jpg")
knitr::include_graphics("../figs/05.png")
dev.new()
knitr::include_graphics("./figs/2.jpg")
load("A:/notes/DL/.RData")
knitr::include_graphics("./figs/01.png")
